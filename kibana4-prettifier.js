// Generated by CoffeeScript 1.9.3

/**
  ==UserScript==
  @name         Kibana4 Prettifier
  @version      0.1
  @author       gobie
  @match        http://kibana4.us-w2.aws.ccl/*
  @require      https://code.jquery.com/jquery-2.1.4.min.js
  ==/UserScript==
 */
var $, clickableAccountId, clickableUserId, colorRoutes, hideBoringFields, prettify, shortenHostname, shortenTime;

$ = jQuery.noConflict(true);

prettify = function() {
  shortenTime();
  shortenHostname();
  clickableAccountId();
  clickableUserId();
  colorRoutes();
  return hideBoringFields();
};

shortenTime = (function() {
  var regex;
  regex = /^(\w{3})\w+(\s\d+)\w+(\s\d+), (.+)$/;
  return function() {
    return $('doc-table .discover-table-timefield').filter(':not(.prettified)').each(function(i, el) {
      var $el;
      $el = $(el);
      if (!regex.test($el.text())) {
        return;
      }
      $el.html($el.html().replace(regex, function(_, month, day, year, time) {
        return month + day + year + '<br />' + time;
      }));
      return $el.addClass('prettified');
    });
  };
})();

shortenHostname = (function() {
  var appNameMap, regex;
  regex = /^(\w+)\.[\w-]+\.\w+\.\w+$/;
  appNameMap = {
    app1: 'DEV',
    app2: 'MOBILE'
  };
  return function() {
    return $('doc-table .discover-table-datafield').filter(':not(.prettified)').each(function(i, el) {
      var $el, ref;
      $el = $(el);
      if (!regex.test($el.text())) {
        return;
      }
      $el.html($el.html().replace(regex, function(_, name) {
        var ref;
        return (ref = appNameMap[name]) != null ? ref : name;
      }));
      if ((ref = $el.html()) !== 'DEV' && ref !== 'MOBILE') {
        $el.closest('tr').css({
          'background-color': '#FCE1E3'
        });
      }
      return $el.addClass('prettified');
    });
  };
})();

clickableAccountId = (function() {
  var regex;
  regex = /^\d+$/;
  return function() {
    return $('doc-table .discover-table-datafield:nth-child(5n)').filter(':not(.prettified)').each(function(i, el) {
      var $el;
      $el = $(el);
      if (!regex.test($el.text())) {
        return;
      }
      $el.on('click', function() {
        return window.open("https://admin.ccl/support-interface-2#/detail/account:" + ($el.text()));
      });
      $el.addClass('prettified');
      return $el.attr('role', 'button');
    });
  };
})();

clickableUserId = (function() {
  var regex;
  regex = /^\d+$/;
  return function() {
    return $('doc-table .discover-table-datafield:nth-child(6n)').filter(':not(.prettified)').each(function(i, el) {
      var $el;
      $el = $(el);
      if (!regex.test($el.text())) {
        return;
      }
      $el.on('click', function() {
        return window.open("https://admin.ccl/support-interface-2#/detail/account:" + ($el.prev().text()) + "-product:167111-user:" + ($el.text()));
      });
      $el.addClass('prettified');
      return $el.attr('role', 'button');
    });
  };
})();

colorRoutes = (function() {
  var regex, routesMap;
  regex = /^(\w+\s)?[\w\/-]+$/;
  routesMap = {
    '\/ads\/': 'rgba(0,0,0,0.4)',
    '\/metrics': '#FA6B6B',
    '\/posts\/': '#32C8FA',
    '\/listening\/': '#878A88',
    '\/exports\/|phantomjs': '#4349F7'
  };
  return function() {
    return $('doc-table .discover-table-datafield:nth-child(3n)').filter(':not(.prettified)').each(function(i, el) {
      var $el, color, routePattern;
      $el = $(el);
      if (!$el.text().match(regex)) {
        return;
      }
      for (routePattern in routesMap) {
        color = routesMap[routePattern];
        if (!((new RegExp(routePattern)).test($el.text()))) {
          continue;
        }
        $el.css('color', color);
        break;
      }
      return $el.addClass('prettified');
    });
  };
})();

hideBoringFields = (function() {
  return function() {
    return $('doc-table td[title="@version"], doc-table td[title="_id"], doc-table td[title="_index"], doc-table td[title="_lsi_name"], doc-table td[title="_lsi_port"], doc-table td[title="_lsi_type"], doc-table td[title="_lso_name"], doc-table td[title="_type"]').closest('tr').remove();
  };
})();

setInterval(prettify, 2000);
